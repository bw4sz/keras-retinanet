#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('keras_retinanet/preprocessing/onthefly.py'): {181L: (0,
        None,
        1,
        0)}}
debug.err-values = {loc('keras_retinanet/preprocessing/onthefly.py'): {}}
debug.recent-run-args = {loc('keras_retinanet/bin/train.py'): [u'csv /Users/ben/Documents/keras-retinanet/examples/test.csv /Users/ben/Documents/keras-retinanet/examples/test_classes.csv\n',
        u'csv /Users/ben/Documents/keras-retinanet/examples/test.csv /Users/ben/Documents/keras-retinanet/examples/test_classes.csv --group_method random\n',
        u'csv /Users/ben/Documents/keras-retinanet/examples/test.csv /Users/ben/Documents/keras-retinanet/examples/test_classes.csv']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'bpZQzW8ebbbzsc7bKeMVVsVoTb'\
        'xpUqNE',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.07527443805541034,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'grid',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'self.site',
                                       'fReverse': False,
                                       'fSearchText': u'warnings',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 2698L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/ben/Documents/DeepForest/DeepForest/Lidar.py': ['o'\
        'cd\n',
        'pcd\n',
        'features\n',
        'row\n',
        'row.xmin\n',
        'normal_xyz=normalize(tree)\n',
        '#convert to open3d format\npcd = open3d.PointCloud()\npcd.points = '\
        'open3d.Vector3dVector(normal_xyz)\n\n#subsample on fine grid\ndownp'\
        'cd = open3d.voxel_down_sample(pcd, voxel_size = 0.05)\n\n#Minimum d'\
        'istances among points\ndat=np.asarray(downpcd.points)\nd=min_distan'\
        'ce(dat)\n\n',
        'd\n',
        'if(d.shape[0]>num_points):\n    rows=np.random.choice(d.shape[0],si'\
        'ze=num_points,replace=False)\nelse:\n    rows=np.random.choice(d.sh'\
        'ape[0],size=num_points,replace=False)\n\n',
        'rows.shape\n',
        'd.shape\n',
        'downpcd\n',
        'tree.shape\n',
        'trees\n',
        '[x.shape for x in trees]\n',
        'd.shape[0]\n'],
                                   u'file:/Users/ben/Documents/keras-retinanet/keras_retinanet/preprocessing/csvtest.py': ['s'\
        'elf.image_data\n',
        'len(self.image_data)\n',
        'self.image_data[2]\n',
        'self.image_data[/data/imgs/img_002.jpg]\n',
        'self.image_data["/data/imgs/img_002.jpg"]\n'],
                                   u'file:/Users/ben/Documents/keras-retinanet/keras_retinanet/preprocessing/onthefly.py': ['d'\
        'ata.to_dict("index")\n',
        'data.set_index("Cluster")\n',
        'data.set_index("Cluster").T.to_dict()\n',
        'a=data.set_index("Cluster").T.to_dict()\n',
        'a[1]\n',
        'len(a)\n',
        'len(a[1])\n',
        'len(a[2])\n',
        'a[2]\n',
        'a[3]\n',
        'a[4]\n',
        'a[5]\n',
        'a=data.set_index("Cluster").T\n',
        'a\n',
        "a.to_dict(into=<class 'dict'>)\n",
        'a.to_dict()\n',
        'a.to_dict("index")\n',
        'a=data.set_index("Cluster")\n',
        'data.set_index("Cluster").to_dict("index")\n',
        '{k: v.to_dict() for k,v in data.groupby("Column")}\n',
        '{k: v.to_dict() for k,v in data.groupby("Cluster")}\n',
        '{k: v.to_dict("list") for k,v in data.groupby("Cluster")}\n',
        '{k: v.to_dict("index") for k,v in data.groupby("Cluster")}\n',
        "row['cluster_xmin']\n",
        'row.keys()\n',
        'row.keys\n',
        'row[1]\n',
        'row[2]\n',
        'len(row)\n',
        'row[0]\n',
        "row[0]['cluster_xmin']\n",
        'row[:]["cluster_xmin"]\n',
        'row[]["cluster_xmin"]\n',
        'row[:1]["cluster_xmin"]\n',
        'row[0]["cluster_xmin"]\n',
        'row[1]["cluster_xmin"]\n',
        'cluster_ymin\n',
        'self.image_data[0]\n',
        'self.image_data[1]\n',
        'self.image_data[2]\n',
        'data\n',
        'path\n',
        'image_index\n',
        'annots\n',
        "for idx, annot in enumerate(annots):\n    class_name = annot['label"\
        "_numeric']\n    boxes[idx, 0] = float(annot['xmin'])\n    boxes[idx"\
        ", 1] = float(annot['ymin'])\n    boxes[idx, 2] = float(annot['xmax'"\
        "])\n    boxes[idx, 3] = float(annot['ymax'])\n    boxes[idx, 4] = s"\
        "elf.name_to_label(class_name)\n\n",
        'annot\n',
        'class_name\n',
        'features\n',
        'row.rgb_path\n',
        'row\n',
        "self.rgb_tile_dir + row[0]['rgb_path']\n",
        'rasterio.plot\n',
        'rasterio.plot.   \n',
        'pyplot.imshow()\n',
        "src=self.rgb_tile_dir + row[0]['rgb_path']\n",
        "src = rasterio.open(self.rgb_tile_dir + row[0]['rgb_path'])\n",
        "pyplot.imshow(out_image, cmap='pink')\n",
        "f=self.rgb_tile_dir + row[0]['rgb_path']\n",
        'src=rasterio.open(f)\n',
        'src\n',
        "pyplot.imshow(src.read(1), cmap='pink')\n",
        'pyplot.show() \n',
        'out_image/1000\n',
        'out_image/1000*255\n',
        'from matplotlib import pyplot\n',
        'pyplot(out_image)\n',
        "with rasterio.open(self.rgb_tile_dir + row[0]['rgb_path']) as src:"\
        "\n    out_image, out_transform = mask(src, [features], crop=True)\n"\
        "\n",
        'out_image.shape\n',
        'out_image=np.moveaxis(out_image, 0, -1)\n',
        'out_image=out_image/1000*255\n',
        'pyplot.imshow(out_image)\n',
        'pyplot.show()\n',
        'class(out_image)\n',
        'type(out_image)\n',
        'np.asarray(out_image).shape()\n',
        'np.asarray(out_image).shape\n',
        'out_image\n',
        'np.asarray(out_image)\n',
        "#crop and return image, all rgb_paths are the same\nwith rasterio.o"\
        "pen(self.rgb_tile_dir + row[0]['rgb_path']) as src:\n    out_image,"\
        " out_transform = mask(src, [features], crop=True)\n    \n#color cha"\
        "nnel should be last, tensorflow convention?\nout_image=np.moveaxis("\
        "out_image, 0, -1)     \n\n#scale to 0-255\nout_image=out_image/1000"\
        "\n\n",
        'pyplot.imshow(np.asarray(out_image))\n',
        'annotations[invalid_index]\n',
        '[annotations[invalid_index, :] for invalid_index in invalid_indices'\
        ']\n',
        'annotations\n',
        'annotations[16]\n',
        'invalid_indices\n',
        'index\n',
        'group\n',
        'annotations[4]\n',
        'annotations[2]\n',
        'len(annotations)\n',
        'type(annotations)\n',
        'annotations[1]\n',
        'annotations[0]\n',
        'self.image_data\n',
        'self.image_data[4]\n',
        'self.image\n',
        'np.asrray(image)\n',
        'image\n',
        'np.asarray(image)\n',
        'image.shape\n']},
                       'launch-id': None,
                       'sel-line': 2743L,
                       'sel-line-start': 276193L,
                       'selection_end': 276193L,
                       'selection_start': 276193L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 2L,
                       'folded-linenos': [],
                       'history': {None: ['import pandas as pd\n',
        'pd.read_csv\n',
        'bounding_box_path="../data/detection_OSBS_003.csv"\n',
        'bbox=pd.read_csv(bounding_box_path)\n',
        'import h5py as h5\nimport numpy as np\nimport pyfor\nimport open3d'\
        '\nfrom scipy.stats import gaussian_kde\nfrom scipy.spatial import d'\
        'istance\nimport matplotlib.pyplot as plt\nimport pandas as pd\n\n',
        '# read bounding box\nbbox=pd.read_csv(bounding_box_path)\n\n# Read '\
        'Lidar tile\ncloud=loadLidar(lidar_path)\n    \n#filter out bare ear'\
        'th\ncloud.filter(min = 3, max = 200, dim = "z")\n\n#Create numpy ar'\
        'ray\nxyz=cloud.las.points.iloc[:,0:3].values\n\n# normalize\nnormal'\
        '_xyz=normalize(xyz)\n\n#convert to open3d format\npcd = open3d.Poin'\
        'tCloud()\npcd.points = open3d.Vector3dVector(normal_xyz)\n\n',
        'bbox\n',
        "bbox['label']\n",
        "bbox['label'].values\n",
        'bbox.head\n',
        'self.image_data\n',
        'import rasterio\n']},
                       'launch-id': None,
                       'sel-line': 15L,
                       'sel-line-start': 848L,
                       'selection_end': 848L,
                       'selection_start': 848L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('keras_retinanet/preprocessing/generator.py'),
        {'attrib-starts': [],
         'first-line': 14L,
         'folded-linenos': [],
         'sel-line': 21L,
         'sel-line-start': 679L,
         'selection_end': 679L,
         'selection_start': 679L,
         'zoom': 0L},
        1529602652.749646],
        [loc('keras_retinanet/preprocessing/onthefly.py'),
         {'attrib-starts': [('CSVGenerator',
                             85),
                            ('CSVGenerator.load_annotations',
                             182)],
          'first-line': 166L,
          'folded-linenos': [],
          'sel-line': 194L,
          'sel-line-start': 5836L,
          'selection_end': 5884L,
          'selection_start': 5884L,
          'zoom': 0L},
         1529602666.145619],
        [loc('keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [],
          'first-line': 225L,
          'folded-linenos': [],
          'sel-line': 20L,
          'sel-line-start': 646L,
          'selection_end': 646L,
          'selection_start': 646L,
          'zoom': 0L},
         1529602676.025293],
        [loc('keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [('Generator',
                             34),
                            ('Generator.filter_annotations',
                             115)],
          'first-line': 129L,
          'folded-linenos': [],
          'sel-line': 134L,
          'sel-line-start': 5238L,
          'selection_end': 5259L,
          'selection_start': 5259L,
          'zoom': 0L},
         1529602694.224969],
        [loc('keras_retinanet/preprocessing/onthefly.py'),
         {'attrib-starts': [('CSVGenerator',
                             85),
                            ('CSVGenerator.load_annotations',
                             182)],
          'first-line': 166L,
          'folded-linenos': [],
          'sel-line': 194L,
          'sel-line-start': 5836L,
          'selection_end': 5884L,
          'selection_start': 5884L,
          'zoom': 0L},
         1529602705.187267],
        [loc('keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [('Generator',
                             34),
                            ('Generator.filter_annotations',
                             115)],
          'first-line': 129L,
          'folded-linenos': [],
          'sel-line': 134L,
          'sel-line-start': 5238L,
          'selection_end': 5272L,
          'selection_start': 5272L,
          'zoom': 0L},
         1529602714.553309],
        [loc('keras_retinanet/preprocessing/csv_generator.py'),
         {'attrib-starts': [('CSVGenerator',
                             112),
                            ('CSVGenerator.name_to_label',
                             171)],
          'first-line': 160L,
          'folded-linenos': [],
          'sel-line': 175L,
          'sel-line-start': 5910L,
          'selection_end': 5910L,
          'selection_start': 5910L,
          'zoom': 0L},
         1529602739.972642],
        [loc('keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [('Generator',
                             34),
                            ('Generator.filter_annotations',
                             115)],
          'first-line': 129L,
          'folded-linenos': [],
          'sel-line': 134L,
          'sel-line-start': 5238L,
          'selection_end': 5272L,
          'selection_start': 5272L,
          'zoom': 0L},
         1529602739.975696],
        [loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/rasterio/__init__.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1529602739.977832],
        [loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/utils/image.py'),
         {'attrib-starts': [('read_image_bgr',
                             25)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 31L,
          'sel-line-start': 841L,
          'selection_end': 841L,
          'selection_start': 841L,
          'zoom': 0L},
         1529602739.980097],
        [loc('../DeepForest/_config_debug.yml'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 180L,
          'selection_end': 191L,
          'selection_start': 191L,
          'zoom': 0L},
         1529602739.982028],
        [loc('keras_retinanet/bin/train.py'),
         {'attrib-starts': [('main',
                             411)],
          'first-line': 319L,
          'folded-linenos': [],
          'sel-line': 441L,
          'sel-line-start': 18005L,
          'selection_end': 18005L,
          'selection_start': 18005L,
          'zoom': 0L},
         1529602739.984344],
        [loc('../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         {'displayed-index': 27,
          'viewer-state': {'history': [-1,
                                       27],
                           'history-pos': 1,
                           'index': 27,
                           'top': 0,
                           'top-left-pos': None}},
         1529602739.986425],
        [loc('../DeepForest/DeepForest/CropGenerator.py'),
         {'attrib-starts': [('crop_rgb',
                             88)],
          'first-line': 80L,
          'folded-linenos': [],
          'sel-line': 105L,
          'sel-line-start': 3095L,
          'selection_end': 3131L,
          'selection_start': 3131L,
          'zoom': 0L},
         1529602739.989353],
        [loc('../DeepForest/_config.yml'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 169L,
          'selection_end': 185L,
          'selection_start': 185L,
          'zoom': 0L},
         1529602739.991615],
        [loc('keras_retinanet/preprocessing/csvtest.py'),
         {'attrib-starts': [('_read_annotations',
                             62)],
          'first-line': 60L,
          'folded-linenos': [],
          'sel-line': 96L,
          'sel-line-start': 3364L,
          'selection_end': 3459L,
          'selection_start': 3364L,
          'zoom': 0L},
         1529602739.993697],
        [loc('keras_retinanet/preprocessing/onthefly.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 22L,
          'sel-line-start': 535L,
          'selection_end': 535L,
          'selection_start': 535L,
          'zoom': 0L},
         1529602810.997477],
        [loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/rasterio/tools/mask.py'),
         {'attrib-starts': [('mask',
                             8)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 151L,
          'selection_end': 151L,
          'selection_start': 151L,
          'zoom': 0L},
         1529602830.189114],
        [loc('keras_retinanet/preprocessing/onthefly.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 17L,
          'sel-line-start': 432L,
          'selection_end': 446L,
          'selection_start': 446L,
          'zoom': 0L},
         1529602845.846534],
        [loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/preprocessing/generator.py'),
         {'attrib-starts': [('Generator',
                             34),
                            ('Generator.filter_annotations',
                             115)],
          'first-line': 166L,
          'folded-linenos': [],
          'sel-line': 118L,
          'sel-line-start': 4392L,
          'selection_end': 4422L,
          'selection_start': 4422L,
          'zoom': 0L},
         1529603657.37573]],
        20),
        'current-loc': loc('keras_retinanet/preprocessing/onthefly.py'),
        'editor-state-list': [(loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/preprocessing/generator.py'),
                               {'attrib-starts': [('Generator',
        34),
        ('Generator.filter_annotations',
         115)],
                                'first-line': 166L,
                                'folded-linenos': [],
                                'sel-line': 118L,
                                'sel-line-start': 4392L,
                                'selection_end': 4422L,
                                'selection_start': 4422L,
                                'zoom': 0L}),
                              (loc('keras_retinanet/preprocessing/onthefly.py'),
                               {'attrib-starts': [('CSVGenerator',
        88),
        ('CSVGenerator.load_image',
         160)],
                                'first-line': 155L,
                                'folded-linenos': [],
                                'sel-line': 180L,
                                'sel-line-start': 5323L,
                                'selection_end': 5355L,
                                'selection_start': 5355L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/preprocessing/generator.py'),
         loc('keras_retinanet/preprocessing/onthefly.py')]),
                               'open_files': [u'keras_retinanet/preprocessing/onthefly.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.2},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (1440,
                         0,
                         1920,
                         1080)}]}
guimgr.recent-documents = [loc('keras_retinanet/preprocessing/onthefly.py'),
                           loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/preprocessing/generator.py')]
guimgr.visual-state = {loc('../DeepForest/DeepForest/CropGenerator.py'): {'a'\
        'ttrib-starts': [('crop_rgb',
                          88)],
        'first-line': 80L,
        'folded-linenos': [],
        'sel-line': 105L,
        'sel-line-start': 3095L,
        'selection_end': 3131L,
        'selection_start': 3131L,
        'zoom': 0L},
                       loc('../DeepForest/_config.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 6L,
        'sel-line-start': 169L,
        'selection_end': 185L,
        'selection_start': 185L,
        'zoom': 0L},
                       loc('../DeepForest/_config_debug.yml'): {'attrib-star'\
        'ts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 180L,
        'selection_end': 191L,
        'selection_start': 191L,
        'zoom': 0L},
                       loc('keras_retinanet/bin/train.py'): {'attrib-starts': [('m'\
        'ain',
        411)],
        'first-line': 319L,
        'folded-linenos': [],
        'sel-line': 441L,
        'sel-line-start': 18005L,
        'selection_end': 18005L,
        'selection_start': 18005L,
        'zoom': 0L},
                       loc('keras_retinanet/preprocessing/csv_generator.py'): {'a'\
        'ttrib-starts': [('CSVGenerator',
                          112),
                         ('CSVGenerator.name_to_label',
                          171)],
        'first-line': 160L,
        'folded-linenos': [],
        'sel-line': 175L,
        'sel-line-start': 5910L,
        'selection_end': 5910L,
        'selection_start': 5910L,
        'zoom': 0L},
                       loc('keras_retinanet/preprocessing/csvtest.py'): {'at'\
        'trib-starts': [('_read_annotations',
                         62)],
        'first-line': 60L,
        'folded-linenos': [],
        'sel-line': 96L,
        'sel-line-start': 3364L,
        'selection_end': 3459L,
        'selection_start': 3364L,
        'zoom': 0L},
                       loc('keras_retinanet/preprocessing/generator.py'): {'a'\
        'ttrib-starts': [('Generator',
                          34),
                         ('Generator.filter_annotations',
                          115)],
        'first-line': 129L,
        'folded-linenos': [],
        'sel-line': 134L,
        'sel-line-start': 5238L,
        'selection_end': 5272L,
        'selection_start': 5272L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/rasterio/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/utils/image.py'): {'a'\
        'ttrib-starts': [('read_image_bgr',
                          25)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 841L,
        'selection_end': 841L,
        'selection_start': 841L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        [u'PYTHONPATH=""'])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/retinanet/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u'warnings',
                         u'group_method',
                         u'group',
                         u'data2geojson',
                         u'read_image_bgr',
                         u'image_path(',
                         u'batch_size',
                         u'batch_szie',
                         u'image_aspect_ratio',
                         u'aspect',
                         u'resize']
testing.stored-results = (1,
                          [],
                          {})
